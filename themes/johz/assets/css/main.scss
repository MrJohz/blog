@mixin shadow($size) {
  box-shadow: $size/2 $size/2 10px 0px var(--shadow-color),
    $size * 0.75 $size * 0.75 $size 0px var(--shadow-color);
}

@mixin full-shadow($size) {
  box-shadow: 0 $size/2 10px 0px var(--shadow-color),
    $size / 3 $size / 3 $size 0px var(--shadow-color);
}

@font-face {
  font-family: Sen;
  src: url("/Sen-VariableFont_wght.woff2") format("woff2"),
    url("/Sen-VariableFont_wght.woff") format("woff");

  font-weight: 400 800;
}

@mixin small() {
  @media screen and (max-width: 749px) {
    @content;
  }
}

@mixin large() {
  @media screen and (min-width: 750px) {
    @content;
  }
}

:root {
  color-scheme: light dark;

  --main-background: light-dark(#f3f8ff, #15191a);
  --highlight-background: light-dark(#afc1d6, #095348);
  --text-color: light-dark(#092327, #e7eee5);
  --article-color: light-dark(#cef9f2, #202b2c);
  --link-deco-color: light-dark(#ab92bf, #6b0a34);
  --text-highlight-background: light-dark(#fff5, #fff2);

  --shadow-color: rgba(0, 0, 0, 0.4);
}

.dark {
  color-scheme: dark;
}

.light {
  color-scheme: light;
}

/* @link https://utopia.fyi/space/calculator?c=320,16,1.2,1240,18,1.25,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,l,xl,12 */

:root {
  --space-3xs: clamp(0.25rem, 0.2283rem + 0.1087vw, 0.3125rem);
  --space-2xs: clamp(0.5rem, 0.4783rem + 0.1087vw, 0.5625rem);
  --space-xs: clamp(0.75rem, 0.7065rem + 0.2174vw, 0.875rem);
  --space-s: clamp(1rem, 0.9565rem + 0.2174vw, 1.125rem);
  --space-m: clamp(1.5rem, 1.4348rem + 0.3261vw, 1.6875rem);
  --space-l: clamp(2rem, 1.913rem + 0.4348vw, 2.25rem);
  --space-xl: clamp(3rem, 2.8696rem + 0.6522vw, 3.375rem);
  --space-2xl: clamp(4rem, 3.8261rem + 0.8696vw, 4.5rem);
  --space-3xl: clamp(6rem, 5.7391rem + 1.3043vw, 6.75rem);

  /* em-equivalents */
  --space-2xs-em: clamp(0.5em, 0.4783em + 0.1087vw, 0.5625em);
  --space-xs-em: clamp(0.75em, 0.7065em + 0.2174vw, 0.875em);
  --space-s-em: clamp(1em, 0.9565em + 0.2174vw, 1.125em);
  --space-m-em: clamp(1.5em, 1.4348em + 0.3261vw, 1.6875em);
  --space-l-em: clamp(2em, 1.913em + 0.4348vw, 2.25em);

  /* One-up pairs */
  --space-3xs-2xs: clamp(0.25rem, 0.1413rem + 0.5435vw, 0.5625rem);
  --space-2xs-xs: clamp(0.5rem, 0.3696rem + 0.6522vw, 0.875rem);
  --space-xs-s: clamp(0.75rem, 0.6196rem + 0.6522vw, 1.125rem);
  --space-s-m: clamp(1rem, 0.7609rem + 1.1957vw, 1.6875rem);
  --space-m-l: clamp(1.5rem, 1.2391rem + 1.3043vw, 2.25rem);
  --space-l-xl: clamp(2rem, 1.5217rem + 2.3913vw, 3.375rem);
  --space-xl-2xl: clamp(3rem, 2.4783rem + 2.6087vw, 4.5rem);
  --space-2xl-3xl: clamp(4rem, 3.0435rem + 4.7826vw, 6.75rem);

  /* Custom pairs */
  --space-s-l: clamp(1rem, 0.5652rem + 2.1739vw, 2.25rem);
  --space-l-xl: clamp(2rem, 1.5217rem + 2.3913vw, 3.375rem);
}

/* @link https://utopia.fyi/type/calculator?c=320,16,1.2,1240,18,1.25,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,l,xl,12 */

:root {
  --step--2: clamp(0.6944rem, 0.6856rem + 0.0444vw, 0.72rem);
  --step--1: clamp(0.8333rem, 0.8101rem + 0.1159vw, 0.9rem);
  --step-0: clamp(1rem, 0.9565rem + 0.2174vw, 1.125rem);
  --step-1: clamp(1.2rem, 1.1283rem + 0.3587vw, 1.4063rem);
  --step-2: clamp(1.44rem, 1.3295rem + 0.5527vw, 1.7578rem);
  --step-3: clamp(1.728rem, 1.5648rem + 0.8161vw, 2.1973rem);
  --step-4: clamp(2.0736rem, 1.8395rem + 1.1704vw, 2.7466rem);
  --step-5: clamp(2.4883rem, 2.1597rem + 1.6433vw, 3.4332rem);
}

:root {
  font-size: var(--step-0);
  font-family: Sen, sans-serif;
}

html,
body {
  display: flex;
  flex-direction: column;
  width: 100%;
}

body {
  background-color: var(--main-background);
  color: var(--text-color);
  align-items: center;
  padding-block: var(--space-l-xl);
  gap: var(--space-l-xl);
}

.header {
  display: flex;
  flex-direction: column;

  h1 {
    font-size: var(--step-5);
    font-weight: 600;
    width: max-content;
    background-color: var(--highlight-background);
    @include shadow(0.25rem);
    padding: var(--space-s-m);

    z-index: 1;

    &:has(a:hover) {
      background-color: var(--link-deco-color);
    }
  }
  nav {
    font-size: var(--step-0);
    align-self: flex-end;
    width: max-content;
    background-color: var(--article-color);
    @include shadow(0.25rem);
    padding: calc(var(--space-l) + var(--space-xs-s)) var(--space-s)
      var(--space-xs);
    margin-block-start: calc(0px - var(--space-l));
    margin-inline-end: calc(0px - var(--space-s-m));

    ul {
      display: flex;
      list-style: none;
      padding: 0;
      gap: var(--space-xs-s);
    }
  }
}

main {
  display: contents;
}

article {
  @include shadow(0.25rem);
  width: calc(min(100vw, 40rem));

  @include small() {
    width: 100vw;
    @include full-shadow(0.25rem);
  }

  background-color: var(--article-color);
  padding: var(--space-m);

  margin-block-start: var(--space-m);
  &:has(.cover) {
    margin-block-start: 0;
  }

  .cover {
    max-width: calc(100% + 2 * var(--space-m));
    height: auto;
    margin-inline: calc(0px - var(--space-m));
    margin-block-start: calc(0px - var(--space-m));
    margin-block-end: var(--space-m);
  }

  header {
    @include shadow(0.25rem);
    background-color: var(--highlight-background);
    max-width: max-content;
    margin-block-start: calc(0px - var(--space-s) - var(--space-m));
    margin-block-end: var(--space-m);
    margin-inline-start: calc(0px - var(--space-m));
    padding: 0.5rem;
    padding-inline-start: 0.9rem;
    font-size: var(--step-2);

    h1 {
      font-weight: 500;
    }

    position: relative;

    @include large() {
      margin-inline-start: calc(0px - var(--space-m) - var(--space-l));
    }

    &:has(a:hover) {
      background-color: var(--link-deco-color);
    }
  }

  .details {
    font-size: var(--step--1);
    margin-block-start: var(--flow-space, var(--space-s-em));
    opacity: 0.8;
  }

  .toc {
    summary {
      font-weight: bold;
      cursor: pointer;

      & + * {
        margin-block-start: var(--space-2xs);
      }
    }

    --flow-space: var(--space-2xs-em);
    @include small() {
      &.desktop {
        display: none;
      }
    }
    @include large() {
      &.mobile {
        display: none;
      }
      @include shadow(0.25rem);
      width: 18rem;
      float: right;
      margin: var(--space-s);
      margin-block-start: 0;
      margin-inline-end: calc(-4 * var(--space-s));
      background-color: var(--highlight-background);
      padding: var(--space-s);
    }
  }

  .content {
    &,
    & > * + *,
    & blockquote > * + *,
    & li > * + * {
      margin-block-start: var(--flow-space, var(--space-s-em));
    }

    ul,
    ol {
      padding-inline-start: var(--space-s);
      & > li:not(:first-of-type) {
        padding-block-start: var(--space-2xs);
        &:has(p) {
          padding-block-start: var(--space-xs);
        }
      }
    }

    blockquote {
      position: relative;
      margin-inline: 0em;
      padding-block: var(--space-2xs);

      & > blockquote {
        margin-inline-start: var(--space-s);
      }

      & > ul,
      & > li {
        margin-inline-start: var(--space-xs);
      }

      & pre {
        margin-inline-start: calc(-1 * var(--space-xs));
      }

      &::before {
        content: "";
        display: block;
        position: absolute;
        top: 0;
        height: 100%;
        width: var(--space-3xs);
        background-color: var(--text-color);
        left: calc(-1 * var(--space-s) + 3px);
      }
    }

    code {
      background-color: var(--text-highlight-background);
    }

    pre {
      overflow-x: auto;
      margin-inline: calc(-1 * var(--space-m));
      padding-block: var(--space-s);
      padding-inline: var(--space-m);
      background-color: var(--text-highlight-background);

      code {
        background-color: unset;
      }
    }

    table {
      display: block;
      margin-inline: calc(-1 * var(--space-m));
      width: calc(100% + 2 * var(--space-m));
      overflow-x: auto;

      border-top: var(--space-3xs) solid var(--text-color);
      border-bottom: var(--space-3xs) solid var(--text-color);
      background-color: var(--text-highlight-background);

      // This is a clever, ugly hack:
      // * Initially, use a `:has()` declaration to hide all `th` cells
      //   -- this ensures that browsers that don't support `:has()` will
      //   ignore this declaration and treat th cells as normal
      // * Then, use :has(th:not(:empty)) to select all thead elements that
      //   have at least one non-empty head cell.  Revert these to using
      //   `table-cell` display
      // The result should be the following:
      // * for browsers that don't support `:has`, tables are rendered as per default
      // * for other browsers, for each table:
      //   * if there is at least one `th` with content, all `th`s will be displayed
      //   * otherwise, no `th`s will displayed
      thead:has(th) th {
        display: none;
      }

      thead:has(th:not(:empty)) th {
        display: table-cell;
      }

      thead th,
      tbody td {
        padding-block: var(--space-2xs);
        padding-inline: var(--space-2xs);

        text-wrap: pretty;
        hanging-punctuation: first force-end last;

        &:first-child {
          padding-inline-start: var(--space-s);
        }

        &:last-child {
          padding-inline-end: var(--space-s);
        }
      }
    }

    p {
      text-wrap: pretty;
      hanging-punctuation: first force-end last;
    }

    h2 {
      font-size: var(--step-1);
      font-weight: 500;
    }
    h3 {
      font-size: var(--step-0);
      font-weight: 500;
    }

    :is(h2, h3) {
      @include shadow(0.25rem);
      background-color: var(--highlight-background);
      max-width: max-content;
      margin-inline-start: calc(-1 * var(--space-m));
      padding: var(--space-2xs);
      padding-inline-start: var(--space-s);

      --flow-space: var(--space-m-em);

      @include large() {
        margin-inline-start: calc(-2 * var(--space-m));
      }

      &:has(a:hover) {
        background-color: var(--link-deco-color);
      }

      a {
        color: inherit;
        text-decoration: inherit;
      }
    }

    h4 {
      font-weight: bold;
      --flow-space: var(--space-m-em);
      font-size: var(--step-0);

      a {
        text-decoration: inherit;
      }
    }
  }
}

nav a,
.content a,
.details a,
.footer a,
#share {
  color: var(--text-color);
  text-decoration: underline;
  text-decoration-color: var(--link-deco-color);
  text-decoration-thickness: 0.2em;
  text-decoration-skip-ink: none;
  transition: text-decoration-thickness 75ms, text-underline-offset 75ms;
  text-underline-offset: 0;
  &:hover {
    text-decoration-thickness: calc(1em + 0.2em);
    text-underline-offset: calc(-1em);
  }
}

.tags {
  --flow-space: var(--space-3xs);
  margin-inline-start: var(--space-s);
  opacity: 0.8;
  font-size: var(--step--1);
}

.footer {
  text-align: center;
  & + & {
    margin-block-start: var(--space-2xs);
  }
}

// share logic

.show-on-share {
  display: none;
  .share-enabled & {
    display: unset;
  }
}

.share-enabled .hide-on-share {
  display: none;
}

#share {
  display: unset;
  border: unset;
  padding: unset;
  background: unset;
  cursor: pointer;
}

// email de-obfuscation

.email {
  .hidden {
    display: none;
  }
}
